services:
  door2door-backend:
    image: "door2door-backend"
    build:
      context: .
      dockerfile: ${BACKEND_REPO_ABSOLUTE_PATH}/Dockerfile
    ports:
      - "8080:8080"
    restart: on-failure
    networks:
      - door2door-network
    depends_on:
      - database

  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: main_database
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    networks:
      - door2door-network
    volumes:
      - ${BACKEND_REPO_ABSOLUTE_PATH}/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - door2door-network
    volumes:
      - redis_data:/data

  angular-frontend:
    build:
      context: ${FRONTEND_REPO_ABSOLUTE_PATH}/
      dockerfile: ${FRONTEND_REPO_ABSOLUTE_PATH}/Dockerfile
    ports:
      - "80:80"
    networks:
      - door2door-network
    depends_on:
      - door2door-backend

networks:
  door2door-network:
    driver: "bridge"

volumes:
  database_data:
  redis_data: